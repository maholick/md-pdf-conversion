name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run ESLint
        working-directory: ./frontend
        run: npm run lint
        continue-on-error: true  # Don't fail on lint errors for now

      - name: Run TypeScript type check
        working-directory: ./frontend
        run: npx tsc --noEmit

  build:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Check build output
        working-directory: ./frontend
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
          echo "Build successful: .next directory exists"
          du -sh .next

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: md-pdf-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Pandoc Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./pandoc
          file: ./pandoc/Dockerfile
          push: false
          tags: md-pdf-pandoc:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-docker-compose:
    name: Test Docker Compose
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start services
        run: |
          docker compose up -d
          sleep 10  # Wait for services to start

      - name: Check frontend health
        run: |
          curl -f http://localhost:3000 || exit 1
          echo "Frontend is running successfully"

      - name: Check service logs
        if: failure()
        run: |
          docker compose logs

      - name: Stop services
        if: always()
        run: docker compose down