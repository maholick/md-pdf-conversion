name: PDF Conversion Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'templates/**'
      - 'pandoc.yaml'
      - 'eisvogel.yaml'
      - 'pandoc/**'
      - 'docker-compose.yaml'
      - '.github/workflows/pdf-test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'templates/**'
      - 'pandoc.yaml'
      - 'eisvogel.yaml'
      - 'pandoc/**'
      - 'docker-compose.yaml'
      - '.github/workflows/pdf-test.yml'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test-direct-pandoc:
    name: Test Direct Pandoc Conversion
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull pandoc/extra Docker image
        run: docker pull pandoc/extra:3.1.1.0

      - name: Check markdown files exist
        run: |
          echo "Checking for markdown files in docs directory..."
          ls -la docs/*.md || echo "No markdown files found in docs/"

          if [ ! -f "docs/example.md" ]; then
            echo "Warning: docs/example.md not found"
          fi

      - name: Run pandoc conversion
        run: |
          docker run --rm \
            --platform linux/amd64 \
            --volume "$(pwd):/data" \
            --user $(id -u):$(id -g) \
            pandoc/extra:3.1.1.0 \
            docs/*.md \
            --defaults pandoc.yaml \
            --metadata-file eisvogel.yaml

      - name: Verify PDF output
        run: |
          echo "Checking output directory..."
          ls -la output/

          if [ ! -f "output/example.pdf" ]; then
            echo "Error: PDF file was not generated at output/example.pdf"
            exit 1
          fi

          echo "Success: PDF generated successfully"
          echo "File size: $(du -h output/example.pdf | cut -f1)"

          # Check file size is reasonable (> 10KB)
          size=$(stat -c%s "output/example.pdf" 2>/dev/null || stat -f%z "output/example.pdf" 2>/dev/null)
          if [ "$size" -lt 10240 ]; then
            echo "Warning: PDF file seems too small (${size} bytes)"
            exit 1
          fi

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: generated-pdf
          path: output/example.pdf
          retention-days: 7

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Frontend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: md-pdf-frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Pandoc Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./pandoc
          file: ./pandoc/Dockerfile
          push: false
          tags: md-pdf-pandoc:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  frontend-build:
    name: Frontend Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build application
        working-directory: ./frontend
        run: npm run build
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Check build output
        working-directory: ./frontend
        run: |
          if [ ! -d ".next" ]; then
            echo "Build failed: .next directory not found"
            exit 1
          fi
          echo "Build successful: .next directory exists"
          du -sh .next